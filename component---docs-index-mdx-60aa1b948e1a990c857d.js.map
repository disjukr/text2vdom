{"version":3,"sources":["webpack:///../docs/index.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","Playground","__position","__code","__scope","$","_ref2","children","href","isMDXComponent"],"mappings":"gTAQaA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,oBAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAI5EF,YAAA,MACE,GAAM,aACJ,aACJA,YAAA,SAAI,yCACJA,YAAA,SAAI,mDACJA,YAACG,IAAU,CAACC,WAAY,EAAGC,OAAQ,mfAAwfC,QAAS,CACliBT,QACAJ,kBACAU,eACAI,MACAd,kBACAb,gBACCsB,QAAQ,cACV,IAAMK,YAAE,6WAQN,CACC,SAAUC,IAAA,IAAC,SACTC,GACDD,EAAA,OAAKR,YAAA,KAAGU,KAAK,8BACTD,aAMZ,IAAAf,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,oBAEDI,EAAWiB,gBAAiB","file":"component---docs-index-mdx-60aa1b948e1a990c857d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/me/github/disjukr/text2vdom/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport $ from '../dist';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"text2vdom\"\n    }}>{`text2vdom`}</h1>\n    <p>{`jsx스럽게 생긴 문자열을 파싱하여 React 노드로 변환해줍니다.`}</p>\n    <p>{`번역텍스트 사이에 리액트 컴포넌트를 끼워넣고 싶은 경우에 사용하기 위해 만들었습니다.`}</p>\n    <Playground __position={0} __code={'() =>\\n  $(\\n    `\\n      react-dom에서 <b>기본 지원되는 태그는</b> 바로 사용할 수 있습니다.<br/>\\n      <b>중첩된 <i>태그 사용</i></b>도 지원됩니다.<br/>\\n      부등호를 쓰고싶으면 &lt;이렇게&gt; 사용해야합니다.<br/>\\n      애트리뷰트는 쌍따옴표를 두르는 경우가 허용됩니다만,\\n      그 정도로 복잡한 표현이 필요하다면 <my-tag>커스텀 태그</my-tag>를 사용하세요.<br/>\\n      애트리뷰트 안에서 쌍따옴표를 사용하고 싶으면 \\\"&quot;이렇게&quot; 사용해야합니다.\\\"<br/>\\n      다른 html 엔티티를 지원하지는 않습니다.\\n  `,\\n    {\\n      \\'my-tag\\': ({ children }) => (\\n        <a href=\\\"https://github.com/disjukr\\\">{children}</a>\\n      ),\\n    },\\n  )'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      $,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => $(`\n        react-dom에서 <b>기본 지원되는 태그는</b> 바로 사용할 수 있습니다.<br/>\n        <b>중첩된 <i>태그 사용</i></b>도 지원됩니다.<br/>\n        부등호를 쓰고싶으면 &lt;이렇게&gt; 사용해야합니다.<br/>\n        애트리뷰트는 쌍따옴표를 두르는 경우가 허용됩니다만,\n        그 정도로 복잡한 표현이 필요하다면 <my-tag>커스텀 태그</my-tag>를 사용하세요.<br/>\n        애트리뷰트 안에서 쌍따옴표를 사용하고 싶으면 \"&quot;이렇게&quot; 사용해야합니다.\"<br/>\n        다른 html 엔티티를 지원하지는 않습니다.\n    `, {\n        'my-tag': ({\n          children\n        }) => <a href='https://github.com/disjukr'>\n            {children}\n        </a>\n      })}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}